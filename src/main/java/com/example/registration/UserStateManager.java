package com.example.registration;

import lombok.extern.slf4j.Slf4j;
import org.springframework.stereotype.Component;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

@Component
@Slf4j
public class UserStateManager {

    private final Map<Long, UserRegistration> userStates = new ConcurrentHashMap<>();

    // –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ç–∏–ø–æ–º
    public void startRegistration(Long chatId, RegistrationType type) {
        UserRegistration registration = new UserRegistration(type);
        userStates.put(chatId, registration);
        log.info("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} –¥–æ–±–∞–≤–ª–µ–Ω –≤ userStates: {}", chatId, registration);
    }

    public void updateUserRegistration(Long chatId, UserRegistration registration) {
        userStates.put(chatId, registration);
        log.info("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {} -> {}", chatId, registration);
    }

    // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    public boolean isUserRegistering(Long chatId) {
        boolean result = userStates.containsKey(chatId);
        log.info("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ chatId {}: {}", chatId, result);
        return result;
    }

    // –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    public UserRegistration getUserRegistration(Long chatId) {
        return userStates.get(chatId);
    }

    // –£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∞)
    public void removeUser(Long chatId) {

        userStates.remove(chatId);
        log.info("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {} —É–¥–∞–ª–µ–Ω –∏–∑ userStates", chatId);
    }
}
